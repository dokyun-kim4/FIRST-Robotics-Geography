---
jupyter: python3
---

# FIRST Robotics Geography: What affects team density?
A 2023 SoftDes Midterm Project

Author: Dexter Friis-hecht and Dokyun Kim

```{python}
%load_ext autoreload
%autoreload 2
```

```{python}
#Importing helper functions from another folder#
import importlib.util
spec = importlib.util.spec_from_file_location("frc_data_functions",R"../DataFromFRC/frc_data_functions.py")
fdf = importlib.util.module_from_spec(spec)
spec.loader.exec_module(fdf)
spec = importlib.util.spec_from_file_location("generate_usa_map",R"../Visualization/generate_usa_map.py")
gum = importlib.util.module_from_spec(spec)
spec.loader.exec_module(gum)
from pop_team_density_comparison import *
```

# Introduction

FIRST Robotics is an international robotics organization that has inspired thousands of teenagers to pursue STEM, with the majority of teams concentrated
in the United States. With the growth of the organization over time, there is value in not just geographically visualzing the teams for different years, but
also finidng the factors that drive the growth of the organization. 

With FRC having a measured impact on the number of students entering STEM, knowing how and why the organization has spread poses the opportunity to find out how such spread can be applied to other educational organizations.

We first started with FIRST... that is, we started with gathering team location data from the FIRST API. With access to this, as well as some graphing packages such
as Folium and Geopy, we can set upon our first prerequisite, getting every USA team on a map.

# Getting to know the FIRST API

In order to access information about every FRC team in the US, we need to use the official FIRST API.
We use Python's Requests library to scrape information from the FIRST API.

The code below scrapes information about ALL teams from the year 2020 and shows the first page of it.

```{python}
import requests as rq
from apitoken import TOKEN

url = "https://frc-api.firstinspires.org/v3.0/2020/teams?page=1"
HEADER = {
    "Is-Modified-Since": "",
}

response = rq.get(
            url=url,
            auth=TOKEN,
            headers=HEADER,
            timeout=100,
        )

print(response.text)
```

# Getting team info

The code above gets data from one page of a specific year.  
However, we only want the list of dictionaries that come after "teams: ", not the information in front of it.  
To isolate the list of dictionaries, we call the helper function `trim_data()` from `frc_data_functions.py`, which we imported at the top. 

To get all pages, we use a for-loop to append all data to a list, then convert it into a .csv file using the Pandas library.

```{python}
import pandas as pd



HEADER = {
    "Is-Modified-Since": "",
}

datalist = []
for i in range (61):
    url = f"https://frc-api.firstinspires.org/v3.0/2020/teams?page={i+1}"
    response = rq.get(
                url=url,
                auth=TOKEN,
                headers=HEADER,
                timeout=100,
            )
    datalist += fdf.trim_data(response.text)

df = pd.DataFrame(datalist)
print(df)
```

# Filtering the Data

We successfully isolated the teams' information, but there is still some filtering we need to do.  
As shown in the Dataframe above, there are multiple entries of `Off-Season Demo Team` that exist as placeholders.  
Also, for the scope of this project, we only want teams in the USA.

```{python}
only_usa = df[df.country == "USA"]
remove_demo = only_usa[only_usa.nameFull != "FIRST Off-Season Demo Team"]

print(remove_demo)
```

Now we have completed all the necessary steps to start visualizing the data to answer our question.

# Visualization #1: FRC Team Numbers

With all of our data, we can first check how many FRC teams there are for each year. This will allow us to easily visualize the
overall growth/decline of the organization year by year.

```{python}
graph_all_team_counts()
```

Besides 2021, where the number of FRC teams declined significantly due to Covid, the orginization has seen consistent growth over time.

# Visualization #2: FRC Heatmap / Team Location
As a pure visualizer of the data, we created two functions.
The first function plots the mainland USA teams on an interactive map. If the team had a custom 
avatar, then it was used to represent the team. Otherwise, a default FRC logo was used.
The function takes a single input, which you use to select which year you wish to visualize.
Below we use 2020, but any year can be used as long as you have the location data.

```{python}
usa_avatar_map = gum.usa_map_with_avatar(2020)
usa_avatar_map
```

Using similar notation, we can also generate a heatmap for any given year.

```{python}
usa_heatmap = gum.heat_map(2020)
usa_heatmap
```

A visual analysis of these map seemingly show a correlation between team quantity and population density.
The majoirty of teams seem situated on the east and west coast, as well as in urban clusters. Meanwhile, the midwest
is fairly sparse.

So, how much does team quantity actually correlate with population?

# Visualization #2: Population density vs. FRC density

```{python}
density_comparison = plot_density_comparison(2020)
```

If population was the primary determining factor for the number of teams per state, then the ratio of teams per 100,000 people would remain largely constant across all states. While this does hold true for a good number of states, there are some clear outliers, such as Michigan, Minnesota, and New Hampshire.

While the average number of teams per 100,000 people is 0.95, Michigan has 5.65 teams, Minnesota has 3.93, and New Hampshire has 3.41.

So, while population is a factor in the number of FRC teams, there is some other factor that is having a massive impact in certain states.

Well, as they say, to find your answers you have to follow the money.

# Visualization #3: Sponsor location vs. FRC density

```{python}
usa_sponsor_map = gum.add_sponsor(usa_heatmap)
usa_sponsor_map
```

Based on the map, we can see that all three of our outlier states contain some very prominent industry sponsors, such as 3M, General Motors, and Raytheon.

# Conclusions

Based on these findings, we can draw a few conclusions. One, FIRST Robotics as an organization is growing within the United States at a steady rate. Considering the
considerable bounce-back after Covid, teams weren't disbanded under Covid, but rather paused operations for the season.

Secondly, the main driver of FRC team spread seems to be population and monetary resources. Population was a consistent factor in terms of defining team location, resulting in similar results to a population density map. However, sponsor location functions as an additional "multiplicative" factor that can drastically boost the quantity of teams in any given area.

When put into context, the maps we've created could be used to figure out where large FRC hubs are located. If your child is invested in robotics and you're considering a location to move to, this could evaluate how well that location can support your child's interests. Prospective sponsors could also use these maps to consider possible underfunded regions that could benefit from a monetary influx.

This project taught us a few things, both on the data front and on the coding front. For data analysis, this project taught us that visual data can be misleading, which shows the value of looking at the actual numbers driving your visual data. On the coding front, this project taught us how to collaboratively work on a large project with another person. This meant that we had to learn how to maintain consistency across each other's code, as well as how to keep our github organized.

We did encounter some issues and frustrations across our project. For one, we happened to upload our API token to GitHub, which was a trial to remove. While this was a problem
we had to solve, by far our biggest problem was API rate limits. Since we were working with free versions of APIs, the actual rate that we could request data was limited heavily. For many projects this might not have been an issue, but since we were gathering the location of thousands of teams, this meant that it took hours of pure runtime for us to gather all of the data we needed to work on this project.

If we had more time for this project, there would be two main things we would want to integrate. Firstly, we would want to add graphs that animate over time. This would remove the need to specify a year that we would want to visualize, and allow for a more seamless data exploration experience. Secondly, the Folium package that we used is a python wrapper for Leaflet, a JavaScript library. This means that we could quite easily make these maps available to be explored on an interactive website. This would greatly improve accessibility to our data.



